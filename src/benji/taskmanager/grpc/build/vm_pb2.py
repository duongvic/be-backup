# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vm.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import base_type_pb2 as base__type__pb2
from . import vm_type_pb2 as vm__type__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='vm.proto',
  package='grpc_vm',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x08vm.proto\x12\x07grpc_vm\x1a\x0f\x62\x61se_type.proto\x1a\rvm_type.proto2[\n\tVMService\x12&\n\tcreate_vm\x12\x0b.grpc_vm.VM\x1a\x0c.base.Output\x12&\n\tdelete_vm\x12\x0b.grpc_vm.VM\x1a\x0c.base.Outputb\x06proto3'
  ,
  dependencies=[base__type__pb2.DESCRIPTOR,vm__type__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_VMSERVICE = _descriptor.ServiceDescriptor(
  name='VMService',
  full_name='grpc_vm.VMService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=53,
  serialized_end=144,
  methods=[
  _descriptor.MethodDescriptor(
    name='create_vm',
    full_name='grpc_vm.VMService.create_vm',
    index=0,
    containing_service=None,
    input_type=vm__type__pb2._VM,
    output_type=base__type__pb2._OUTPUT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='delete_vm',
    full_name='grpc_vm.VMService.delete_vm',
    index=1,
    containing_service=None,
    input_type=vm__type__pb2._VM,
    output_type=base__type__pb2._OUTPUT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_VMSERVICE)

DESCRIPTOR.services_by_name['VMService'] = _VMSERVICE

# @@protoc_insertion_point(module_scope)
